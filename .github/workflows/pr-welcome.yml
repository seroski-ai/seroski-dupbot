name: üéâ Welcome New Contributors

on:
  pull_request_target:
    types: [opened]

permissions:
  issues: write

jobs:
  welcome:
    runs-on: ubuntu-latest
    
    steps:
      - name: Post welcome comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const contributor = context.payload.pull_request.user.login;
            const prNumber = context.payload.pull_request.number;
            const repoName = context.repo.repo;
            const owner = context.repo.owner;
            
            const message = [
              'üéâ **Thank You for Your Contribution!** üéâ',
              '',
              `@${contributor}, thank you for taking the time to contribute to ${repoName}!`,
              '',
              'Your pull request has been received and will be reviewed by a maintainer soon. Here\'s what happens next:',
              '',
              '1. üìã **Maintainer Review** - A project maintainer will review your changes',
              '2. üí¨ **Feedback** - We may request changes or ask questions',
              '3. ‚úÖ **Approval & Merge** - Once approved, your PR will be merged',
              '',
              'üìö **Need Help?**',
              `- Check our [Contributing Guide](https://github.com/${owner}/${repoName}/blob/HEAD/CONTRIBUTING.md) for guidelines`,
              '- Feel free to ask questions in the PR comments',
              `- Review our [Workflows Documentation](https://github.com/${owner}/${repoName}/blob/HEAD/WORKFLOWS.md) to understand our processes`,
              '',
              'Thank you for making this project better! üöÄ',
              '',
              '---',
              '*This comment was generated automatically by Seroski-DupBot ü§ñ*',
              '*Check out the developer: [Portfolio](https://portfolio.rosk.dev)*'
            ].join('\n');

            // Check for existing welcome comment
            const existingComments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const marker = '*This comment was generated automatically by Seroski-DupBot ü§ñ*';
            const alreadyExists = existingComments.data.some(comment => comment.body && comment.body.includes(marker));

            if (alreadyExists) {
              console.log(`‚ö†Ô∏è Welcome comment already exists on PR #${prNumber}, skipping.`);
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: message
              });
              console.log(`‚úÖ Welcome comment posted to PR #${prNumber} by @${contributor}`);
            }
